{"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6954278,"sourceType":"datasetVersion","datasetId":3994222}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/ikram98ai/tiktok-video-claim-classification?scriptVersionId=194677310\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# **Classifying videos using machine learning**\n\nA machine learning model that can be used to determine whether a video contains a claim or whether it offers an opinion. With a successful prediction model, TikTok can reduce the backlog of user reports and prioritize them more efficiently.\n\n**The purpose** of this model is to mitigate misinformation in videos on the TikTok platform.\n\n**The goal** of this model is to predict whether a TikTok video presents a \"claim\" or presents an \"opinion\".\n","metadata":{"id":"rgSbVJvomcVa"}},{"cell_type":"markdown","source":"# **PACE stages**\n","metadata":{"id":"NzDjfCSLf6Jq"}},{"cell_type":"markdown","source":"## **Pace: Plan**","metadata":{"id":"E5g1A74r0ow_"}},{"cell_type":"markdown","source":"**Selecting an evaluation metric**\n\nTo determine which evaluation metric might be best, consider how the model might be wrong. There are two possibilities for bad predictions:\n\n  - **False positives:** When the model predicts a video is a claim when in fact it is an opinion\n  - **False negatives:** When the model predicts a video is an opinion when in fact it is a claim\n\nThe worst case for an opinion misclassified as a claim is that the video goes to human review. The worst case for a claim that's misclassified as an opinion is that the video does not get reviewed _and_ it violates the terms of service. A video that violates the terms of service would be considered posted from a \"banned\" author, as referenced in the data dictionary.\n\nBecause it's more important to minimize false negatives, the model evaluation metric will be **recall**.\n","metadata":{"id":"ltMmCdk-2T1u"}},{"cell_type":"markdown","source":"### **Imports and data loading**","metadata":{"id":"e8Vm3QEfGELS"}},{"cell_type":"code","source":"# Import packages for data manipulation\nimport pandas as pd\nimport numpy as np\n\n# Import packages for data visualization\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Import packages for data preprocessing\nfrom sklearn.feature_extraction.text import TfidfVectorizer\n\n# Import packages for data modeling\nfrom sklearn.model_selection import train_test_split,PredefinedSplit\nfrom sklearn.metrics import classification_report, accuracy_score, precision_score, \\\nrecall_score, f1_score, confusion_matrix, ConfusionMatrixDisplay\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.ensemble import RandomForestClassifier\nfrom xgboost import XGBClassifier\nfrom xgboost import plot_importance\n\nfrom skopt import BayesSearchCV\nfrom skopt.space import Integer, Real\n\nimport warnings\nwarnings.filterwarnings('ignore')","metadata":{"id":"tCni9wAGphb0","execution":{"iopub.status.busy":"2024-08-30T11:19:26.586764Z","iopub.execute_input":"2024-08-30T11:19:26.587101Z","iopub.status.idle":"2024-08-30T11:19:27.809969Z","shell.execute_reply.started":"2024-08-30T11:19:26.587075Z","shell.execute_reply":"2024-08-30T11:19:27.808805Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"# Load dataset into dataframe\ndata = pd.read_csv(\"/kaggle/input/tiktok-dataset/tiktok_dataset.csv\")","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":329},"id":"P_CZ-1P1Q62x","outputId":"f960e90c-ed45-41cf-bdaa-598b1e8b4fc0","execution":{"iopub.status.busy":"2024-08-30T11:19:27.816539Z","iopub.execute_input":"2024-08-30T11:19:27.816849Z","iopub.status.idle":"2024-08-30T11:19:27.916244Z","shell.execute_reply.started":"2024-08-30T11:19:27.816823Z","shell.execute_reply":"2024-08-30T11:19:27.914776Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":"## **PACE: Analyze**","metadata":{"id":"EgPRBjizg1oo"}},{"cell_type":"markdown","source":"### **Examine data, summary info, and descriptive stats**","metadata":{"id":"fNVl2Tb-xNB_"}},{"cell_type":"code","source":"# Display first few rows\ndata.head()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":357},"id":"2rfk95MLp4a_","outputId":"6fbea70a-94ef-4f1d-e9c4-822567aa296f","execution":{"iopub.status.busy":"2024-08-30T11:19:27.917877Z","iopub.execute_input":"2024-08-30T11:19:27.918247Z","iopub.status.idle":"2024-08-30T11:19:27.947794Z","shell.execute_reply.started":"2024-08-30T11:19:27.918215Z","shell.execute_reply":"2024-08-30T11:19:27.946553Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"   # claim_status    video_id  video_duration_sec  \\\n0  1        claim  7017666017                  59   \n1  2        claim  4014381136                  32   \n2  3        claim  9859838091                  31   \n3  4        claim  1866847991                  25   \n4  5        claim  7105231098                  19   \n\n                            video_transcription_text verified_status  \\\n0  someone shared with me that drone deliveries a...    not verified   \n1  someone shared with me that there are more mic...    not verified   \n2  someone shared with me that american industria...    not verified   \n3  someone shared with me that the metro of st. p...    not verified   \n4  someone shared with me that the number of busi...    not verified   \n\n  author_ban_status  video_view_count  video_like_count  video_share_count  \\\n0      under review          343296.0           19425.0              241.0   \n1            active          140877.0           77355.0            19034.0   \n2            active          902185.0           97690.0             2858.0   \n3            active          437506.0          239954.0            34812.0   \n4            active           56167.0           34987.0             4110.0   \n\n   video_download_count  video_comment_count  \n0                   1.0                  0.0  \n1                1161.0                684.0  \n2                 833.0                329.0  \n3                1234.0                584.0  \n4                 547.0                152.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>#</th>\n      <th>claim_status</th>\n      <th>video_id</th>\n      <th>video_duration_sec</th>\n      <th>video_transcription_text</th>\n      <th>verified_status</th>\n      <th>author_ban_status</th>\n      <th>video_view_count</th>\n      <th>video_like_count</th>\n      <th>video_share_count</th>\n      <th>video_download_count</th>\n      <th>video_comment_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>claim</td>\n      <td>7017666017</td>\n      <td>59</td>\n      <td>someone shared with me that drone deliveries a...</td>\n      <td>not verified</td>\n      <td>under review</td>\n      <td>343296.0</td>\n      <td>19425.0</td>\n      <td>241.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>claim</td>\n      <td>4014381136</td>\n      <td>32</td>\n      <td>someone shared with me that there are more mic...</td>\n      <td>not verified</td>\n      <td>active</td>\n      <td>140877.0</td>\n      <td>77355.0</td>\n      <td>19034.0</td>\n      <td>1161.0</td>\n      <td>684.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>claim</td>\n      <td>9859838091</td>\n      <td>31</td>\n      <td>someone shared with me that american industria...</td>\n      <td>not verified</td>\n      <td>active</td>\n      <td>902185.0</td>\n      <td>97690.0</td>\n      <td>2858.0</td>\n      <td>833.0</td>\n      <td>329.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>claim</td>\n      <td>1866847991</td>\n      <td>25</td>\n      <td>someone shared with me that the metro of st. p...</td>\n      <td>not verified</td>\n      <td>active</td>\n      <td>437506.0</td>\n      <td>239954.0</td>\n      <td>34812.0</td>\n      <td>1234.0</td>\n      <td>584.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>claim</td>\n      <td>7105231098</td>\n      <td>19</td>\n      <td>someone shared with me that the number of busi...</td>\n      <td>not verified</td>\n      <td>active</td>\n      <td>56167.0</td>\n      <td>34987.0</td>\n      <td>4110.0</td>\n      <td>547.0</td>\n      <td>152.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Get number of rows and columns\ndata.shape","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kYwW-G1WqX3R","outputId":"b777029a-24f3-4dfc-ef24-d5bf1f4b8b46","execution":{"iopub.status.busy":"2024-08-30T11:19:27.950576Z","iopub.execute_input":"2024-08-30T11:19:27.950952Z","iopub.status.idle":"2024-08-30T11:19:27.95762Z","shell.execute_reply.started":"2024-08-30T11:19:27.950922Z","shell.execute_reply":"2024-08-30T11:19:27.956489Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"(19382, 12)"},"metadata":{}}]},{"cell_type":"code","source":"# Get basic information\ndata.info()","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zyyKCGzCp7SS","outputId":"0505065b-e64f-4fe7-f5d0-01a224b82c3f","execution":{"iopub.status.busy":"2024-08-30T11:19:27.959119Z","iopub.execute_input":"2024-08-30T11:19:27.959584Z","iopub.status.idle":"2024-08-30T11:19:27.984727Z","shell.execute_reply.started":"2024-08-30T11:19:27.959543Z","shell.execute_reply":"2024-08-30T11:19:27.983276Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 19382 entries, 0 to 19381\nData columns (total 12 columns):\n #   Column                    Non-Null Count  Dtype  \n---  ------                    --------------  -----  \n 0   #                         19382 non-null  int64  \n 1   claim_status              19084 non-null  object \n 2   video_id                  19382 non-null  int64  \n 3   video_duration_sec        19382 non-null  int64  \n 4   video_transcription_text  19084 non-null  object \n 5   verified_status           19382 non-null  object \n 6   author_ban_status         19382 non-null  object \n 7   video_view_count          19084 non-null  float64\n 8   video_like_count          19084 non-null  float64\n 9   video_share_count         19084 non-null  float64\n 10  video_download_count      19084 non-null  float64\n 11  video_comment_count       19084 non-null  float64\ndtypes: float64(5), int64(3), object(4)\nmemory usage: 1.8+ MB\n","output_type":"stream"}]},{"cell_type":"code","source":"# Generate basic descriptive stats\ndata.describe()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"HbpuAS2UqY01","outputId":"db89b407-30ba-405e-c4ce-5e3ccc405b57","execution":{"iopub.status.busy":"2024-08-30T11:19:27.986022Z","iopub.execute_input":"2024-08-30T11:19:27.986386Z","iopub.status.idle":"2024-08-30T11:19:28.02894Z","shell.execute_reply.started":"2024-08-30T11:19:27.986352Z","shell.execute_reply":"2024-08-30T11:19:28.02772Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"                  #      video_id  video_duration_sec  video_view_count  \\\ncount  19382.000000  1.938200e+04        19382.000000      19084.000000   \nmean    9691.500000  5.627454e+09           32.421732     254708.558688   \nstd     5595.245794  2.536440e+09           16.229967     322893.280814   \nmin        1.000000  1.234959e+09            5.000000         20.000000   \n25%     4846.250000  3.430417e+09           18.000000       4942.500000   \n50%     9691.500000  5.618664e+09           32.000000       9954.500000   \n75%    14536.750000  7.843960e+09           47.000000     504327.000000   \nmax    19382.000000  9.999873e+09           60.000000     999817.000000   \n\n       video_like_count  video_share_count  video_download_count  \\\ncount      19084.000000       19084.000000          19084.000000   \nmean       84304.636030       16735.248323           1049.429627   \nstd       133420.546814       32036.174350           2004.299894   \nmin            0.000000           0.000000              0.000000   \n25%          810.750000         115.000000              7.000000   \n50%         3403.500000         717.000000             46.000000   \n75%       125020.000000       18222.000000           1156.250000   \nmax       657830.000000      256130.000000          14994.000000   \n\n       video_comment_count  \ncount         19084.000000  \nmean            349.312146  \nstd             799.638865  \nmin               0.000000  \n25%               1.000000  \n50%               9.000000  \n75%             292.000000  \nmax            9599.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>#</th>\n      <th>video_id</th>\n      <th>video_duration_sec</th>\n      <th>video_view_count</th>\n      <th>video_like_count</th>\n      <th>video_share_count</th>\n      <th>video_download_count</th>\n      <th>video_comment_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>19382.000000</td>\n      <td>1.938200e+04</td>\n      <td>19382.000000</td>\n      <td>19084.000000</td>\n      <td>19084.000000</td>\n      <td>19084.000000</td>\n      <td>19084.000000</td>\n      <td>19084.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>9691.500000</td>\n      <td>5.627454e+09</td>\n      <td>32.421732</td>\n      <td>254708.558688</td>\n      <td>84304.636030</td>\n      <td>16735.248323</td>\n      <td>1049.429627</td>\n      <td>349.312146</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>5595.245794</td>\n      <td>2.536440e+09</td>\n      <td>16.229967</td>\n      <td>322893.280814</td>\n      <td>133420.546814</td>\n      <td>32036.174350</td>\n      <td>2004.299894</td>\n      <td>799.638865</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>1.234959e+09</td>\n      <td>5.000000</td>\n      <td>20.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>4846.250000</td>\n      <td>3.430417e+09</td>\n      <td>18.000000</td>\n      <td>4942.500000</td>\n      <td>810.750000</td>\n      <td>115.000000</td>\n      <td>7.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>9691.500000</td>\n      <td>5.618664e+09</td>\n      <td>32.000000</td>\n      <td>9954.500000</td>\n      <td>3403.500000</td>\n      <td>717.000000</td>\n      <td>46.000000</td>\n      <td>9.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>14536.750000</td>\n      <td>7.843960e+09</td>\n      <td>47.000000</td>\n      <td>504327.000000</td>\n      <td>125020.000000</td>\n      <td>18222.000000</td>\n      <td>1156.250000</td>\n      <td>292.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>19382.000000</td>\n      <td>9.999873e+09</td>\n      <td>60.000000</td>\n      <td>999817.000000</td>\n      <td>657830.000000</td>\n      <td>256130.000000</td>\n      <td>14994.000000</td>\n      <td>9599.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Check for missing values\ndata.isna().sum()","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BrunHcfa7xnT","outputId":"d958366a-c57a-4b41-d03b-b8922bbdd09b","execution":{"iopub.status.busy":"2024-08-30T11:19:28.030223Z","iopub.execute_input":"2024-08-30T11:19:28.030608Z","iopub.status.idle":"2024-08-30T11:19:28.048307Z","shell.execute_reply.started":"2024-08-30T11:19:28.030575Z","shell.execute_reply":"2024-08-30T11:19:28.046804Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"#                             0\nclaim_status                298\nvideo_id                      0\nvideo_duration_sec            0\nvideo_transcription_text    298\nverified_status               0\nauthor_ban_status             0\nvideo_view_count            298\nvideo_like_count            298\nvideo_share_count           298\nvideo_download_count        298\nvideo_comment_count         298\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"There are very few missing values relative to the number of samples in the dataset. Therefore, observations with missing values can be dropped.","metadata":{"id":"LiadUrXRqQhg"}},{"cell_type":"code","source":"# Drop rows with missing values\ndata = data.dropna(axis=0)","metadata":{"id":"SHSj1Hma914I","execution":{"iopub.status.busy":"2024-08-30T11:19:28.049856Z","iopub.execute_input":"2024-08-30T11:19:28.050225Z","iopub.status.idle":"2024-08-30T11:19:28.066207Z","shell.execute_reply.started":"2024-08-30T11:19:28.050194Z","shell.execute_reply":"2024-08-30T11:19:28.065062Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"# Check for duplicates\ndata.duplicated().sum()","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IKaGnWIsiHpH","outputId":"a4027a67-418c-47f5-8eb8-db74c51dc294","execution":{"iopub.status.busy":"2024-08-30T11:19:28.067646Z","iopub.execute_input":"2024-08-30T11:19:28.068048Z","iopub.status.idle":"2024-08-30T11:19:28.10112Z","shell.execute_reply.started":"2024-08-30T11:19:28.068015Z","shell.execute_reply":"2024-08-30T11:19:28.100018Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"markdown","source":"There are no duplicate observations in the data.","metadata":{"id":"scLLbNSIjAWs"}},{"cell_type":"markdown","source":"Tree-based models are robust to outliers, so there is no need to impute or drop any values based on where they fall in their distribution.","metadata":{"id":"k-HcHpGc5Hn7"}},{"cell_type":"code","source":"# Check class balance\ndata[\"claim_status\"].value_counts(normalize=True)","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dQauKR11fyxb","outputId":"7606a6ca-0db4-4002-ca56-84da7926a33c","execution":{"iopub.status.busy":"2024-08-30T11:19:28.102318Z","iopub.execute_input":"2024-08-30T11:19:28.102661Z","iopub.status.idle":"2024-08-30T11:19:28.112896Z","shell.execute_reply.started":"2024-08-30T11:19:28.102632Z","shell.execute_reply":"2024-08-30T11:19:28.111573Z"},"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"claim_status\nclaim      0.503458\nopinion    0.496542\nName: proportion, dtype: float64"},"metadata":{}}]},{"cell_type":"markdown","source":"Approximately 50.3% of the dataset represents claims and 49.7% represents opinions, so the outcome variable is balanced.","metadata":{"id":"ePYWt2p5LqlW"}},{"cell_type":"markdown","source":"## **PACE: Construct**","metadata":{"id":"3n1eikFh8akS"}},{"cell_type":"markdown","source":"### **Feature engineering**","metadata":{"id":"hb_u1c6_T1i-"}},{"cell_type":"code","source":"# Create `text_length` column\ndata['text_length'] = data['video_transcription_text'].str.len()\ndata.head()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"a0IaKI8dnG9h","outputId":"c28076fb-a280-47e0-e925-1c90dac4a9a3","execution":{"iopub.status.busy":"2024-08-30T11:19:28.11435Z","iopub.execute_input":"2024-08-30T11:19:28.114784Z","iopub.status.idle":"2024-08-30T11:19:28.145776Z","shell.execute_reply.started":"2024-08-30T11:19:28.114733Z","shell.execute_reply":"2024-08-30T11:19:28.144542Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"   # claim_status    video_id  video_duration_sec  \\\n0  1        claim  7017666017                  59   \n1  2        claim  4014381136                  32   \n2  3        claim  9859838091                  31   \n3  4        claim  1866847991                  25   \n4  5        claim  7105231098                  19   \n\n                            video_transcription_text verified_status  \\\n0  someone shared with me that drone deliveries a...    not verified   \n1  someone shared with me that there are more mic...    not verified   \n2  someone shared with me that american industria...    not verified   \n3  someone shared with me that the metro of st. p...    not verified   \n4  someone shared with me that the number of busi...    not verified   \n\n  author_ban_status  video_view_count  video_like_count  video_share_count  \\\n0      under review          343296.0           19425.0              241.0   \n1            active          140877.0           77355.0            19034.0   \n2            active          902185.0           97690.0             2858.0   \n3            active          437506.0          239954.0            34812.0   \n4            active           56167.0           34987.0             4110.0   \n\n   video_download_count  video_comment_count  text_length  \n0                   1.0                  0.0           97  \n1                1161.0                684.0          107  \n2                 833.0                329.0          137  \n3                1234.0                584.0          131  \n4                 547.0                152.0          128  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>#</th>\n      <th>claim_status</th>\n      <th>video_id</th>\n      <th>video_duration_sec</th>\n      <th>video_transcription_text</th>\n      <th>verified_status</th>\n      <th>author_ban_status</th>\n      <th>video_view_count</th>\n      <th>video_like_count</th>\n      <th>video_share_count</th>\n      <th>video_download_count</th>\n      <th>video_comment_count</th>\n      <th>text_length</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>claim</td>\n      <td>7017666017</td>\n      <td>59</td>\n      <td>someone shared with me that drone deliveries a...</td>\n      <td>not verified</td>\n      <td>under review</td>\n      <td>343296.0</td>\n      <td>19425.0</td>\n      <td>241.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>97</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>claim</td>\n      <td>4014381136</td>\n      <td>32</td>\n      <td>someone shared with me that there are more mic...</td>\n      <td>not verified</td>\n      <td>active</td>\n      <td>140877.0</td>\n      <td>77355.0</td>\n      <td>19034.0</td>\n      <td>1161.0</td>\n      <td>684.0</td>\n      <td>107</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>claim</td>\n      <td>9859838091</td>\n      <td>31</td>\n      <td>someone shared with me that american industria...</td>\n      <td>not verified</td>\n      <td>active</td>\n      <td>902185.0</td>\n      <td>97690.0</td>\n      <td>2858.0</td>\n      <td>833.0</td>\n      <td>329.0</td>\n      <td>137</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>claim</td>\n      <td>1866847991</td>\n      <td>25</td>\n      <td>someone shared with me that the metro of st. p...</td>\n      <td>not verified</td>\n      <td>active</td>\n      <td>437506.0</td>\n      <td>239954.0</td>\n      <td>34812.0</td>\n      <td>1234.0</td>\n      <td>584.0</td>\n      <td>131</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>claim</td>\n      <td>7105231098</td>\n      <td>19</td>\n      <td>someone shared with me that the number of busi...</td>\n      <td>not verified</td>\n      <td>active</td>\n      <td>56167.0</td>\n      <td>34987.0</td>\n      <td>4110.0</td>\n      <td>547.0</td>\n      <td>152.0</td>\n      <td>128</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"data[['claim_status', 'text_length']].groupby('claim_status').mean()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"nxLJEfLM5jEi","outputId":"47f72289-3ee7-49b4-a4ef-9cc32ef05bf1","execution":{"iopub.status.busy":"2024-08-30T11:19:28.147139Z","iopub.execute_input":"2024-08-30T11:19:28.147691Z","iopub.status.idle":"2024-08-30T11:19:28.167525Z","shell.execute_reply.started":"2024-08-30T11:19:28.147653Z","shell.execute_reply":"2024-08-30T11:19:28.166096Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"              text_length\nclaim_status             \nclaim           95.376978\nopinion         82.722562","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>text_length</th>\n    </tr>\n    <tr>\n      <th>claim_status</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>claim</th>\n      <td>95.376978</td>\n    </tr>\n    <tr>\n      <th>opinion</th>\n      <td>82.722562</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Visualize the distribution of `text_length` for claims and opinions\nsns.histplot(data=data, stat=\"count\", multiple=\"dodge\", x=\"text_length\",\n             kde=False, palette=\"pastel\", hue=\"claim_status\",\n             element=\"bars\", legend=True)\nplt.xlabel(\"video_transcription_text length (number of characters)\")\nplt.ylabel(\"Count\")\nplt.title(\"Distribution of video_transcription_text length for claims and opinions\")\nplt.show()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"MSq136S3TIYe","outputId":"8c61a3f1-83ea-4d14-d874-a31ac2cc0dcf","execution":{"iopub.status.busy":"2024-08-30T11:19:28.172909Z","iopub.execute_input":"2024-08-30T11:19:28.173292Z","iopub.status.idle":"2024-08-30T11:19:28.770445Z","shell.execute_reply.started":"2024-08-30T11:19:28.173262Z","shell.execute_reply":"2024-08-30T11:19:28.769308Z"},"trusted":true},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"Letter count distributions for both claims and opinions are approximately normal with a slight right skew. Claim videos tend to have more characters&mdash;about 13 more on average, as indicated in a previous cell.","metadata":{"id":"N5acRzDOTB_7"}},{"cell_type":"markdown","source":"**Feature selection and transformation**","metadata":{"id":"5VZowX9rhU1o"}},{"cell_type":"code","source":"# Encoding target and catgorical variables.\nX = data.copy()\n# Drop unnecessary columns\nX = X.drop(['#', 'video_id'], axis=1)\n# Encode target variable\nX['claim_status'] = X['claim_status'].replace({'opinion': 0, 'claim': 1})\n# Dummy encode remaining categorical values\nX = pd.get_dummies(X,\n                   columns=['verified_status', 'author_ban_status'],\n                   drop_first=True,dtype=int)\nX.head()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":374},"id":"DHeI3AVr309a","outputId":"6f6f06ad-9453-46dd-990c-ddd688e8d319","execution":{"iopub.status.busy":"2024-08-30T11:19:28.772051Z","iopub.execute_input":"2024-08-30T11:19:28.772802Z","iopub.status.idle":"2024-08-30T11:19:28.819119Z","shell.execute_reply.started":"2024-08-30T11:19:28.772757Z","shell.execute_reply":"2024-08-30T11:19:28.817732Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"   claim_status  video_duration_sec  \\\n0             1                  59   \n1             1                  32   \n2             1                  31   \n3             1                  25   \n4             1                  19   \n\n                            video_transcription_text  video_view_count  \\\n0  someone shared with me that drone deliveries a...          343296.0   \n1  someone shared with me that there are more mic...          140877.0   \n2  someone shared with me that american industria...          902185.0   \n3  someone shared with me that the metro of st. p...          437506.0   \n4  someone shared with me that the number of busi...           56167.0   \n\n   video_like_count  video_share_count  video_download_count  \\\n0           19425.0              241.0                   1.0   \n1           77355.0            19034.0                1161.0   \n2           97690.0             2858.0                 833.0   \n3          239954.0            34812.0                1234.0   \n4           34987.0             4110.0                 547.0   \n\n   video_comment_count  text_length  verified_status_verified  \\\n0                  0.0           97                         0   \n1                684.0          107                         0   \n2                329.0          137                         0   \n3                584.0          131                         0   \n4                152.0          128                         0   \n\n   author_ban_status_banned  author_ban_status_under review  \n0                         0                               1  \n1                         0                               0  \n2                         0                               0  \n3                         0                               0  \n4                         0                               0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>claim_status</th>\n      <th>video_duration_sec</th>\n      <th>video_transcription_text</th>\n      <th>video_view_count</th>\n      <th>video_like_count</th>\n      <th>video_share_count</th>\n      <th>video_download_count</th>\n      <th>video_comment_count</th>\n      <th>text_length</th>\n      <th>verified_status_verified</th>\n      <th>author_ban_status_banned</th>\n      <th>author_ban_status_under review</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>59</td>\n      <td>someone shared with me that drone deliveries a...</td>\n      <td>343296.0</td>\n      <td>19425.0</td>\n      <td>241.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>97</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>32</td>\n      <td>someone shared with me that there are more mic...</td>\n      <td>140877.0</td>\n      <td>77355.0</td>\n      <td>19034.0</td>\n      <td>1161.0</td>\n      <td>684.0</td>\n      <td>107</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>31</td>\n      <td>someone shared with me that american industria...</td>\n      <td>902185.0</td>\n      <td>97690.0</td>\n      <td>2858.0</td>\n      <td>833.0</td>\n      <td>329.0</td>\n      <td>137</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>25</td>\n      <td>someone shared with me that the metro of st. p...</td>\n      <td>437506.0</td>\n      <td>239954.0</td>\n      <td>34812.0</td>\n      <td>1234.0</td>\n      <td>584.0</td>\n      <td>131</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>19</td>\n      <td>someone shared with me that the number of busi...</td>\n      <td>56167.0</td>\n      <td>34987.0</td>\n      <td>4110.0</td>\n      <td>547.0</td>\n      <td>152.0</td>\n      <td>128</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**Tokenize text column**\n","metadata":{}},{"cell_type":"code","source":"tfidf_vectorizer = TfidfVectorizer(ngram_range=(1,1), max_features=20,stop_words='english').fit(X['video_transcription_text'])\n\nngram_features = tfidf_vectorizer.transform(X['video_transcription_text'])\nngram_df = pd.DataFrame(ngram_features.toarray(), columns=tfidf_vectorizer.get_feature_names_out())\nX = pd.concat([X, ngram_df], axis=1).drop('video_transcription_text',axis=1)\nprint(X.shape)\nX.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-08-30T11:19:28.820333Z","iopub.execute_input":"2024-08-30T11:19:28.821632Z","iopub.status.idle":"2024-08-30T11:19:29.41042Z","shell.execute_reply.started":"2024-08-30T11:19:28.821575Z","shell.execute_reply":"2024-08-30T11:19:29.409276Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"(19084, 31)\n","output_type":"stream"},{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"   claim_status  video_duration_sec  video_view_count  video_like_count  \\\n0             1                  59          343296.0           19425.0   \n1             1                  32          140877.0           77355.0   \n\n   video_share_count  video_download_count  video_comment_count  text_length  \\\n0              241.0                   1.0                  0.0           97   \n1            19034.0                1161.0                684.0          107   \n\n   verified_status_verified  author_ban_status_banned  ...  learned  media  \\\n0                         0                         0  ...      0.0    0.0   \n1                         0                         0  ...      0.0    0.0   \n\n   news  online  read  revealed  view  website  willing  world  \n0   0.0     0.0   0.0       0.0   0.0      0.0      0.0    0.0  \n1   0.0     0.0   0.0       0.0   0.0      0.0      0.0    0.0  \n\n[2 rows x 31 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>claim_status</th>\n      <th>video_duration_sec</th>\n      <th>video_view_count</th>\n      <th>video_like_count</th>\n      <th>video_share_count</th>\n      <th>video_download_count</th>\n      <th>video_comment_count</th>\n      <th>text_length</th>\n      <th>verified_status_verified</th>\n      <th>author_ban_status_banned</th>\n      <th>...</th>\n      <th>learned</th>\n      <th>media</th>\n      <th>news</th>\n      <th>online</th>\n      <th>read</th>\n      <th>revealed</th>\n      <th>view</th>\n      <th>website</th>\n      <th>willing</th>\n      <th>world</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>59</td>\n      <td>343296.0</td>\n      <td>19425.0</td>\n      <td>241.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>97</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>32</td>\n      <td>140877.0</td>\n      <td>77355.0</td>\n      <td>19034.0</td>\n      <td>1161.0</td>\n      <td>684.0</td>\n      <td>107</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>2 rows × 31 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### **Split the data**","metadata":{"id":"zZR2BdQxZQjN"}},{"cell_type":"code","source":"# Isolate target variable\ny = X['claim_status']","metadata":{"id":"uH6jiQECBgFn","execution":{"iopub.status.busy":"2024-08-30T11:19:29.411686Z","iopub.execute_input":"2024-08-30T11:19:29.412024Z","iopub.status.idle":"2024-08-30T11:19:29.416953Z","shell.execute_reply.started":"2024-08-30T11:19:29.411995Z","shell.execute_reply":"2024-08-30T11:19:29.415769Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"# Isolate features\nX = X.drop(['claim_status'], axis=1)\n\n# Display first few rows of features dataframe\nX.head()","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":374},"id":"9NYDoItCJUR-","outputId":"4d3ddaec-7ffc-4df1-b15b-f712ea8e3835","execution":{"iopub.status.busy":"2024-08-30T11:19:29.41831Z","iopub.execute_input":"2024-08-30T11:19:29.41864Z","iopub.status.idle":"2024-08-30T11:19:29.462357Z","shell.execute_reply.started":"2024-08-30T11:19:29.418612Z","shell.execute_reply":"2024-08-30T11:19:29.460847Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"   video_duration_sec  video_view_count  video_like_count  video_share_count  \\\n0                  59          343296.0           19425.0              241.0   \n1                  32          140877.0           77355.0            19034.0   \n2                  31          902185.0           97690.0             2858.0   \n3                  25          437506.0          239954.0            34812.0   \n4                  19           56167.0           34987.0             4110.0   \n\n   video_download_count  video_comment_count  text_length  \\\n0                   1.0                  0.0           97   \n1                1161.0                684.0          107   \n2                 833.0                329.0          137   \n3                1234.0                584.0          131   \n4                 547.0                152.0          128   \n\n   verified_status_verified  author_ban_status_banned  \\\n0                         0                         0   \n1                         0                         0   \n2                         0                         0   \n3                         0                         0   \n4                         0                         0   \n\n   author_ban_status_under review  ...  learned  media  news  online  read  \\\n0                               1  ...      0.0    0.0   0.0     0.0   0.0   \n1                               0  ...      0.0    0.0   0.0     0.0   0.0   \n2                               0  ...      0.0    0.0   0.0     0.0   0.0   \n3                               0  ...      0.0    0.0   0.0     0.0   0.0   \n4                               0  ...      0.0    0.0   0.0     0.0   0.0   \n\n   revealed  view  website  willing  world  \n0       0.0   0.0      0.0      0.0    0.0  \n1       0.0   0.0      0.0      0.0    0.0  \n2       0.0   0.0      0.0      0.0    0.0  \n3       0.0   0.0      0.0      0.0    1.0  \n4       0.0   0.0      0.0      0.0    0.0  \n\n[5 rows x 30 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>video_duration_sec</th>\n      <th>video_view_count</th>\n      <th>video_like_count</th>\n      <th>video_share_count</th>\n      <th>video_download_count</th>\n      <th>video_comment_count</th>\n      <th>text_length</th>\n      <th>verified_status_verified</th>\n      <th>author_ban_status_banned</th>\n      <th>author_ban_status_under review</th>\n      <th>...</th>\n      <th>learned</th>\n      <th>media</th>\n      <th>news</th>\n      <th>online</th>\n      <th>read</th>\n      <th>revealed</th>\n      <th>view</th>\n      <th>website</th>\n      <th>willing</th>\n      <th>world</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>59</td>\n      <td>343296.0</td>\n      <td>19425.0</td>\n      <td>241.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>97</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>32</td>\n      <td>140877.0</td>\n      <td>77355.0</td>\n      <td>19034.0</td>\n      <td>1161.0</td>\n      <td>684.0</td>\n      <td>107</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>31</td>\n      <td>902185.0</td>\n      <td>97690.0</td>\n      <td>2858.0</td>\n      <td>833.0</td>\n      <td>329.0</td>\n      <td>137</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>25</td>\n      <td>437506.0</td>\n      <td>239954.0</td>\n      <td>34812.0</td>\n      <td>1234.0</td>\n      <td>584.0</td>\n      <td>131</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>19</td>\n      <td>56167.0</td>\n      <td>34987.0</td>\n      <td>4110.0</td>\n      <td>547.0</td>\n      <td>152.0</td>\n      <td>128</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 30 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"#### **Create train/validate/test sets**","metadata":{"id":"yHOuraMm1jRy"}},{"cell_type":"code","source":"# Split the data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)","metadata":{"id":"jKgrew0V6o_3","execution":{"iopub.status.busy":"2024-08-30T11:19:29.464092Z","iopub.execute_input":"2024-08-30T11:19:29.464591Z","iopub.status.idle":"2024-08-30T11:19:29.486216Z","shell.execute_reply.started":"2024-08-30T11:19:29.464545Z","shell.execute_reply":"2024-08-30T11:19:29.484725Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"X_tr, X_val, y_tr, y_val = train_test_split( X_train, y_train, test_size=0.3,random_state=42)\nsplit_index = [0 if x in X_val.index else -1 for x in X_train.index ]\ncustom_split= PredefinedSplit(split_index)","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xgbB1NCtfxcc","outputId":"5458052e-8cc4-4799-fa8b-c727ec5ce9a8","execution":{"iopub.status.busy":"2024-08-30T11:19:29.487558Z","iopub.execute_input":"2024-08-30T11:19:29.488767Z","iopub.status.idle":"2024-08-30T11:19:29.532226Z","shell.execute_reply.started":"2024-08-30T11:19:29.488719Z","shell.execute_reply":"2024-08-30T11:19:29.531052Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":"### **Build models**","metadata":{"id":"o16nL7LWQGfY"}},{"cell_type":"markdown","source":"### **Build a logistic regression model**\n","metadata":{}},{"cell_type":"code","source":"lr = LogisticRegression(penalty='l2', solver='liblinear')\nlr.fit(X_train, y_train)\npreds = lr.predict(X_train)\nprint(classification_report(y_train, preds))","metadata":{"execution":{"iopub.status.busy":"2024-08-30T11:19:29.53399Z","iopub.execute_input":"2024-08-30T11:19:29.534431Z","iopub.status.idle":"2024-08-30T11:19:29.7484Z","shell.execute_reply.started":"2024-08-30T11:19:29.534384Z","shell.execute_reply":"2024-08-30T11:19:29.747123Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.98      1.00      0.99      7548\n           1       1.00      0.98      0.99      7719\n\n    accuracy                           0.99     15267\n   macro avg       0.99      0.99      0.99     15267\nweighted avg       0.99      0.99      0.99     15267\n\n","output_type":"stream"}]},{"cell_type":"code","source":"preds = lr.predict(X_test)\nprint('accuracy: ',accuracy_score(y_test,preds))\nprint('precision: ',precision_score(y_test,preds))\nprint('recall: ',recall_score(y_test,preds))\nprint('F1 score: ',f1_score(y_test,preds))\ncm = confusion_matrix(y_test,preds)\nConfusionMatrixDisplay(cm).plot()","metadata":{"execution":{"iopub.status.busy":"2024-08-30T11:19:29.750234Z","iopub.execute_input":"2024-08-30T11:19:29.750856Z","iopub.status.idle":"2024-08-30T11:19:30.110478Z","shell.execute_reply.started":"2024-08-30T11:19:29.750814Z","shell.execute_reply":"2024-08-30T11:19:30.109282Z"},"trusted":true},"execution_count":21,"outputs":[{"name":"stdout","text":"accuracy:  0.9895205658894419\nprecision:  1.0\nrecall:  0.9788247750132345\nF1 score:  0.9892990904226859\n","output_type":"stream"},{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7b370ed5ef50>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"coef = list(zip(lr.feature_names_in_,(np.exp(lr.coef_[0])-1)))\ncoef.sort(key=lambda x: x[1],reverse=True)\nlen(coef),coef","metadata":{"execution":{"iopub.status.busy":"2024-08-30T11:19:30.111958Z","iopub.execute_input":"2024-08-30T11:19:30.11232Z","iopub.status.idle":"2024-08-30T11:19:30.122174Z","shell.execute_reply.started":"2024-08-30T11:19:30.112288Z","shell.execute_reply":"2024-08-30T11:19:30.121016Z"},"trusted":true},"execution_count":22,"outputs":[{"execution_count":22,"output_type":"execute_result","data":{"text/plain":"(30,\n [('video_comment_count', 0.0015205019683468546),\n  ('video_like_count', 0.00029497656965027375),\n  ('video_download_count', 0.0001739517911620858),\n  ('video_view_count', 0.0001457115101104467),\n  ('claim', 2.984381660886548e-05),\n  ('read', 2.8948619332780368e-05),\n  ('learned', 2.4956347617122177e-05),\n  ('discovered', 2.377759373461963e-05),\n  ('friend', 2.3089107340057424e-05),\n  ('colleague', 2.286156542385953e-05),\n  ('media', 2.2675688285289652e-05),\n  ('news', 1.704126034463016e-05),\n  ('revealed', 8.81440357058949e-06),\n  ('online', 7.83220707401e-06),\n  ('website', 7.599197254570811e-06),\n  ('forum', 7.159936070477713e-06),\n  ('author_ban_status_banned', 2.7053366102869347e-06),\n  ('internet', -1.4531007372919902e-06),\n  ('author_ban_status_under review', -1.4448370738384675e-05),\n  ('earth', -3.13071162243439e-05),\n  ('world', -4.596402222356577e-05),\n  ('willing', -6.319984265157341e-05),\n  ('view', -6.383819412736358e-05),\n  ('verified_status_verified', -7.965931252673641e-05),\n  ('colleagues', -0.0001226675132893762),\n  ('family', -0.0001294920143669609),\n  ('friends', -0.00014559074225306556),\n  ('video_share_count', -0.0004924488277824324),\n  ('video_duration_sec', -0.0179339172750842),\n  ('text_length', -0.042272167395576266)])"},"metadata":{}}]},{"cell_type":"markdown","source":"### **Build a random forest model**\n","metadata":{"id":"3_es-Jh1atUz"}},{"cell_type":"markdown","source":"Fit a random forest model to the training set. Use cross-validation to tune the hyperparameters and select the model that performs best on recall.","metadata":{"id":"ty8ieBkDBH4g"}},{"cell_type":"code","source":"# Instantiate the random forest classifier\nrf = RandomForestClassifier(random_state=0)\n\n\nparams = { \n            'max_features': Real(0.3,.9,prior='log-uniform'),\n            'max_depth': Integer(2,20,prior='uniform'),\n            'n_estimators': Integer(50,300,prior='uniform'),\n            'max_samples': Real(.5,.9,prior='uniform'),\n            'min_samples_leaf':Integer(1,5,prior='log-uniform'),\n            'min_samples_split': Integer(2,10,prior='log-uniform')\n        }\nrf_cv =BayesSearchCV(rf,params,cv=custom_split,n_iter=10,n_jobs=-1,refit='recall')","metadata":{"id":"vAb45ShmuwLC","execution":{"iopub.status.busy":"2024-08-30T11:19:30.123613Z","iopub.execute_input":"2024-08-30T11:19:30.124041Z","iopub.status.idle":"2024-08-30T11:19:30.140632Z","shell.execute_reply.started":"2024-08-30T11:19:30.124004Z","shell.execute_reply":"2024-08-30T11:19:30.139367Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"%%time\nrf_cv.fit(X_train, y_train)","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":152},"id":"42reuVJmu8Tt","outputId":"3394a80f-e031-4887-8584-47932a46eccb","execution":{"iopub.status.busy":"2024-08-30T11:19:30.142187Z","iopub.execute_input":"2024-08-30T11:19:30.143125Z","iopub.status.idle":"2024-08-30T11:19:56.222984Z","shell.execute_reply.started":"2024-08-30T11:19:30.143083Z","shell.execute_reply":"2024-08-30T11:19:56.221551Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stdout","text":"CPU times: user 4.27 s, sys: 1.19 s, total: 5.45 s\nWall time: 26.1 s\n","output_type":"stream"},{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"BayesSearchCV(cv=PredefinedSplit(test_fold=array([ 0, -1, ...,  0,  0])),\n              estimator=RandomForestClassifier(random_state=0), n_iter=10,\n              n_jobs=-1, refit='recall',\n              search_spaces={'max_depth': Integer(low=2, high=20, prior='uniform', transform='normalize'),\n                             'max_features': Real(low=0.3, high=0.9, prior='log-uniform', transform='normalize'),\n                             'max_samples': Real(low=0.5, high=0.9, prior='uniform', transform='normalize'),\n                             'min_samples_leaf': Integer(low=1, high=5, prior='log-uniform', transform='normalize'),\n                             'min_samples_split': Integer(low=2, high=10, prior='log-uniform', transform='normalize'),\n                             'n_estimators': Integer(low=50, high=300, prior='uniform', transform='normalize')})","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>BayesSearchCV(cv=PredefinedSplit(test_fold=array([ 0, -1, ...,  0,  0])),\n              estimator=RandomForestClassifier(random_state=0), n_iter=10,\n              n_jobs=-1, refit=&#x27;recall&#x27;,\n              search_spaces={&#x27;max_depth&#x27;: Integer(low=2, high=20, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;max_features&#x27;: Real(low=0.3, high=0.9, prior=&#x27;log-uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;max_samples&#x27;: Real(low=0.5, high=0.9, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;min_samples_leaf&#x27;: Integer(low=1, high=5, prior=&#x27;log-uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;min_samples_split&#x27;: Integer(low=2, high=10, prior=&#x27;log-uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;n_estimators&#x27;: Integer(low=50, high=300, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;)})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">BayesSearchCV</label><div class=\"sk-toggleable__content\"><pre>BayesSearchCV(cv=PredefinedSplit(test_fold=array([ 0, -1, ...,  0,  0])),\n              estimator=RandomForestClassifier(random_state=0), n_iter=10,\n              n_jobs=-1, refit=&#x27;recall&#x27;,\n              search_spaces={&#x27;max_depth&#x27;: Integer(low=2, high=20, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;max_features&#x27;: Real(low=0.3, high=0.9, prior=&#x27;log-uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;max_samples&#x27;: Real(low=0.5, high=0.9, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;min_samples_leaf&#x27;: Integer(low=1, high=5, prior=&#x27;log-uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;min_samples_split&#x27;: Integer(low=2, high=10, prior=&#x27;log-uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;n_estimators&#x27;: Integer(low=50, high=300, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;)})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=0)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=0)</pre></div></div></div></div></div></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"# Examine best recall score\nrf_cv.best_score_","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qr5k5yvwvGPC","outputId":"d015e2ea-8648-44c0-e94e-52e069b2910d","execution":{"iopub.status.busy":"2024-08-30T11:19:56.22465Z","iopub.execute_input":"2024-08-30T11:19:56.225023Z","iopub.status.idle":"2024-08-30T11:19:56.232513Z","shell.execute_reply.started":"2024-08-30T11:19:56.224988Z","shell.execute_reply":"2024-08-30T11:19:56.23126Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"0.9986902423051736"},"metadata":{}}]},{"cell_type":"code","source":"# Examine best parameters\nrf_cv.best_params_","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qieU0tPFvLUA","outputId":"f09592e3-c2dd-4f77-cfc6-ab0bcfe028f9","execution":{"iopub.status.busy":"2024-08-30T11:19:56.23402Z","iopub.execute_input":"2024-08-30T11:19:56.234399Z","iopub.status.idle":"2024-08-30T11:19:56.245615Z","shell.execute_reply.started":"2024-08-30T11:19:56.234359Z","shell.execute_reply":"2024-08-30T11:19:56.244468Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"OrderedDict([('max_depth', 17),\n             ('max_features', 0.61287067140099),\n             ('max_samples', 0.5199329334187042),\n             ('min_samples_leaf', 1),\n             ('min_samples_split', 9),\n             ('n_estimators', 125)])"},"metadata":{}}]},{"cell_type":"markdown","source":"This model performs exceptionally well, with an average recall score of 0.995 across the five cross-validation folds. After checking the precision score to be sure the model is not classifying all samples as claims, it is clear that this model is making almost perfect classifications.","metadata":{"id":"GtG--gHPOE6m"}},{"cell_type":"markdown","source":"### **Build an XGBoost model**","metadata":{"id":"2Mf2TEWBS-hP"}},{"cell_type":"code","source":"# Instantiate the XGBoost classifier\nxgb = XGBClassifier(objective='binary:logistic', random_state=0)\nparams = { \n            'learning_rate': Real(0.001,0.3,prior='log-uniform'),\n            'max_depth': Integer(2,10,prior='uniform'),\n            'min_child_weight': Integer(2,10,prior='uniform'),\n            'n_estimators': Integer(50,1000,prior='uniform'),\n            'reg_alpha':Real(0.0001,2,prior='log-uniform'),\n            'reg_lambda': Real(0.0001,2,prior='log-uniform')\n        }\nxgb_cv =BayesSearchCV(xgb,params,cv=custom_split,n_iter=10,n_jobs=-1,refit='recall')","metadata":{"id":"E0vq2MncTLUM","execution":{"iopub.status.busy":"2024-08-30T11:19:56.246869Z","iopub.execute_input":"2024-08-30T11:19:56.247225Z","iopub.status.idle":"2024-08-30T11:19:56.264181Z","shell.execute_reply.started":"2024-08-30T11:19:56.247183Z","shell.execute_reply":"2024-08-30T11:19:56.262908Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"%%time\nxgb_cv.fit(X_train, y_train)","metadata":{"id":"aiSKpucwToRW","execution":{"iopub.status.busy":"2024-08-30T11:19:56.266248Z","iopub.execute_input":"2024-08-30T11:19:56.26672Z","iopub.status.idle":"2024-08-30T11:20:17.68191Z","shell.execute_reply.started":"2024-08-30T11:19:56.266679Z","shell.execute_reply":"2024-08-30T11:20:17.680427Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stdout","text":"CPU times: user 5.89 s, sys: 1.24 s, total: 7.13 s\nWall time: 21.4 s\n","output_type":"stream"},{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"BayesSearchCV(cv=PredefinedSplit(test_fold=array([ 0, -1, ...,  0,  0])),\n              estimator=XGBClassifier(base_score=None, booster=None,\n                                      callbacks=None, colsample_bylevel=None,\n                                      colsample_bynode=None,\n                                      colsample_bytree=None, device=None,\n                                      early_stopping_rounds=None,\n                                      enable_categorical=False,\n                                      eval_metric=None, feature_types=None,\n                                      gamma=None, grow_policy=None,\n                                      importance_type=None,...\n                             'max_depth': Integer(low=2, high=10, prior='uniform', transform='normalize'),\n                             'min_child_weight': Integer(low=2, high=10, prior='uniform', transform='normalize'),\n                             'n_estimators': Integer(low=50, high=1000, prior='uniform', transform='normalize'),\n                             'reg_alpha': Real(low=0.0001, high=2, prior='log-uniform', transform='normalize'),\n                             'reg_lambda': Real(low=0.0001, high=2, prior='log-uniform', transform='normalize')})","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>BayesSearchCV(cv=PredefinedSplit(test_fold=array([ 0, -1, ...,  0,  0])),\n              estimator=XGBClassifier(base_score=None, booster=None,\n                                      callbacks=None, colsample_bylevel=None,\n                                      colsample_bynode=None,\n                                      colsample_bytree=None, device=None,\n                                      early_stopping_rounds=None,\n                                      enable_categorical=False,\n                                      eval_metric=None, feature_types=None,\n                                      gamma=None, grow_policy=None,\n                                      importance_type=None,...\n                             &#x27;max_depth&#x27;: Integer(low=2, high=10, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;min_child_weight&#x27;: Integer(low=2, high=10, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;n_estimators&#x27;: Integer(low=50, high=1000, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;reg_alpha&#x27;: Real(low=0.0001, high=2, prior=&#x27;log-uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;reg_lambda&#x27;: Real(low=0.0001, high=2, prior=&#x27;log-uniform&#x27;, transform=&#x27;normalize&#x27;)})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">BayesSearchCV</label><div class=\"sk-toggleable__content\"><pre>BayesSearchCV(cv=PredefinedSplit(test_fold=array([ 0, -1, ...,  0,  0])),\n              estimator=XGBClassifier(base_score=None, booster=None,\n                                      callbacks=None, colsample_bylevel=None,\n                                      colsample_bynode=None,\n                                      colsample_bytree=None, device=None,\n                                      early_stopping_rounds=None,\n                                      enable_categorical=False,\n                                      eval_metric=None, feature_types=None,\n                                      gamma=None, grow_policy=None,\n                                      importance_type=None,...\n                             &#x27;max_depth&#x27;: Integer(low=2, high=10, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;min_child_weight&#x27;: Integer(low=2, high=10, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;n_estimators&#x27;: Integer(low=50, high=1000, prior=&#x27;uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;reg_alpha&#x27;: Real(low=0.0001, high=2, prior=&#x27;log-uniform&#x27;, transform=&#x27;normalize&#x27;),\n                             &#x27;reg_lambda&#x27;: Real(low=0.0001, high=2, prior=&#x27;log-uniform&#x27;, transform=&#x27;normalize&#x27;)})</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None, device=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric=None, feature_types=None,\n              gamma=None, grow_policy=None, importance_type=None,\n              interaction_constraints=None, learning_rate=None, max_bin=None,\n              max_cat_threshold=None, max_cat_to_onehot=None,\n              max_delta_step=None, max_depth=None, max_leaves=None,\n              min_child_weight=None, missing=nan, monotone_constraints=None,\n              multi_strategy=None, n_estimators=None, n_jobs=None,\n              num_parallel_tree=None, random_state=0, ...)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">XGBClassifier</label><div class=\"sk-toggleable__content\"><pre>XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None, device=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric=None, feature_types=None,\n              gamma=None, grow_policy=None, importance_type=None,\n              interaction_constraints=None, learning_rate=None, max_bin=None,\n              max_cat_threshold=None, max_cat_to_onehot=None,\n              max_delta_step=None, max_depth=None, max_leaves=None,\n              min_child_weight=None, missing=nan, monotone_constraints=None,\n              multi_strategy=None, n_estimators=None, n_jobs=None,\n              num_parallel_tree=None, random_state=0, ...)</pre></div></div></div></div></div></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"xgb_cv.best_score_","metadata":{"id":"Ny_s71DDTuD5","execution":{"iopub.status.busy":"2024-08-30T11:20:17.683538Z","iopub.execute_input":"2024-08-30T11:20:17.683912Z","iopub.status.idle":"2024-08-30T11:20:17.692258Z","shell.execute_reply.started":"2024-08-30T11:20:17.68388Z","shell.execute_reply":"2024-08-30T11:20:17.691023Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"0.9971621916612093"},"metadata":{}}]},{"cell_type":"code","source":"xgb_cv.best_params_","metadata":{"id":"LZEwxPJiWWRm","execution":{"iopub.status.busy":"2024-08-30T11:20:17.693694Z","iopub.execute_input":"2024-08-30T11:20:17.694128Z","iopub.status.idle":"2024-08-30T11:20:17.709309Z","shell.execute_reply.started":"2024-08-30T11:20:17.694091Z","shell.execute_reply":"2024-08-30T11:20:17.707951Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"OrderedDict([('learning_rate', 0.01464725003603248),\n             ('max_depth', 4),\n             ('min_child_weight', 2),\n             ('n_estimators', 510),\n             ('reg_alpha', 0.490230477836152),\n             ('reg_lambda', 1.3488501594741786)])"},"metadata":{}}]},{"cell_type":"markdown","source":"This model also performs exceptionally well. Although its recall score is very slightly lower than the random forest model's, its precision score is perfect.","metadata":{"id":"mzV00QhtQsNY"}},{"cell_type":"markdown","source":"## **PACE: Execute**","metadata":{"id":"DasR1XS3QpB3"}},{"cell_type":"markdown","source":"#### **Random forest**","metadata":{"id":"gM9egturW1eX"}},{"cell_type":"code","source":"# Use the random forest \"best estimator\" model to get predictions on the validation set\ny_pred = rf_cv.best_estimator_.predict(X_test)","metadata":{"id":"NZQbthy93bWM","execution":{"iopub.status.busy":"2024-08-30T11:20:17.711388Z","iopub.execute_input":"2024-08-30T11:20:17.712029Z","iopub.status.idle":"2024-08-30T11:20:17.761257Z","shell.execute_reply.started":"2024-08-30T11:20:17.71198Z","shell.execute_reply":"2024-08-30T11:20:17.760107Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"# Display the predictions on the validation set\ny_pred","metadata":{"id":"tyKjLA_gYUYZ","execution":{"iopub.status.busy":"2024-08-30T11:20:17.762443Z","iopub.execute_input":"2024-08-30T11:20:17.762796Z","iopub.status.idle":"2024-08-30T11:20:17.769989Z","shell.execute_reply.started":"2024-08-30T11:20:17.762767Z","shell.execute_reply":"2024-08-30T11:20:17.768727Z"},"trusted":true},"execution_count":32,"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"array([1, 0, 1, ..., 0, 1, 0])"},"metadata":{}}]},{"cell_type":"code","source":"# Create a confusion matrix to visualize the results of the classification model\n\n# Compute values for confusion matrix\nlog_cm = confusion_matrix(y_test, y_pred)\n\n# Create display of confusion matrix\nlog_disp = ConfusionMatrixDisplay(confusion_matrix=log_cm, display_labels=None)\n\n# Plot confusion matrix\nlog_disp.plot()\n\n# Display plot\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-30T11:20:17.771363Z","iopub.execute_input":"2024-08-30T11:20:17.771811Z","iopub.status.idle":"2024-08-30T11:20:17.998186Z","shell.execute_reply.started":"2024-08-30T11:20:17.771772Z","shell.execute_reply":"2024-08-30T11:20:17.996684Z"},"trusted":true},"execution_count":33,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"As the above confusion matrix shows, this model does not produce any false negatives.","metadata":{"id":"jFTNAnk9ehWp"}},{"cell_type":"code","source":"# Create a classification report\n# Create classification report for random forest model\ntarget_labels = ['opinion', 'claim']\nprint(classification_report(y_test, y_pred, target_names=target_labels))","metadata":{"id":"AMxCzRa-bnUe","execution":{"iopub.status.busy":"2024-08-30T11:20:18.000045Z","iopub.execute_input":"2024-08-30T11:20:18.000563Z","iopub.status.idle":"2024-08-30T11:20:18.027088Z","shell.execute_reply.started":"2024-08-30T11:20:18.000517Z","shell.execute_reply":"2024-08-30T11:20:18.025888Z"},"trusted":true},"execution_count":34,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n     opinion       1.00      1.00      1.00      1928\n       claim       1.00      1.00      1.00      1889\n\n    accuracy                           1.00      3817\n   macro avg       1.00      1.00      1.00      3817\nweighted avg       1.00      1.00      1.00      3817\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"#### **XGBoost**","metadata":{"id":"LeQzSiGaVBgd"}},{"cell_type":"code","source":"#Evaluate XGBoost model\ny_pred = xgb_cv.best_estimator_.predict(X_test)","metadata":{"id":"8kDW1frqU1gA","execution":{"iopub.status.busy":"2024-08-30T11:20:18.028642Z","iopub.execute_input":"2024-08-30T11:20:18.029086Z","iopub.status.idle":"2024-08-30T11:20:18.052568Z","shell.execute_reply.started":"2024-08-30T11:20:18.029047Z","shell.execute_reply":"2024-08-30T11:20:18.051673Z"},"trusted":true},"execution_count":35,"outputs":[]},{"cell_type":"code","source":"y_pred","metadata":{"id":"t-DOoQk8Vnk0","execution":{"iopub.status.busy":"2024-08-30T11:20:18.053554Z","iopub.execute_input":"2024-08-30T11:20:18.054685Z","iopub.status.idle":"2024-08-30T11:20:18.062888Z","shell.execute_reply.started":"2024-08-30T11:20:18.054642Z","shell.execute_reply":"2024-08-30T11:20:18.06118Z"},"trusted":true},"execution_count":36,"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"array([1, 0, 1, ..., 0, 1, 0])"},"metadata":{}}]},{"cell_type":"code","source":"# Compute values for confusion matrix\nlog_cm = confusion_matrix(y_test, y_pred)\n\n# Create display of confusion matrix\nlog_disp = ConfusionMatrixDisplay(confusion_matrix=log_cm, display_labels=None)\n\n# Plot confusion matrix\nlog_disp.plot()\n\n# Display plot\nplt.title('XGBoost - validation set');\nplt.show()\n","metadata":{"id":"zVswk-gHXLG0","execution":{"iopub.status.busy":"2024-08-30T11:20:18.070353Z","iopub.execute_input":"2024-08-30T11:20:18.070833Z","iopub.status.idle":"2024-08-30T11:20:18.349129Z","shell.execute_reply.started":"2024-08-30T11:20:18.070799Z","shell.execute_reply":"2024-08-30T11:20:18.347443Z"},"trusted":true},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"# Create a classification report\ntarget_labels = ['opinion', 'claim']\nprint(classification_report(y_test, y_pred, target_names=target_labels))","metadata":{"id":"-BIEgcNxvGu-","execution":{"iopub.status.busy":"2024-08-30T11:20:18.350654Z","iopub.execute_input":"2024-08-30T11:20:18.35101Z","iopub.status.idle":"2024-08-30T11:20:18.37385Z","shell.execute_reply.started":"2024-08-30T11:20:18.350978Z","shell.execute_reply":"2024-08-30T11:20:18.372515Z"},"trusted":true},"execution_count":38,"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n     opinion       1.00      1.00      1.00      1928\n       claim       1.00      1.00      1.00      1889\n\n    accuracy                           1.00      3817\n   macro avg       1.00      1.00      1.00      3817\nweighted avg       1.00      1.00      1.00      3817\n\n","output_type":"stream"}]},{"cell_type":"markdown","source":"The results of the XGBoost model were also nearly perfect. However, its errors tended to be false negatives. Identifying claims was the priority, so it's important that the model be good at capturing all actual claim videos. The random forest model has a better recall score, and is therefore the champion model.","metadata":{"id":"vw_nOfzZbUFG"}},{"cell_type":"markdown","source":"#### **Feature importances of champion model**\n\n","metadata":{"id":"sLktqdiEwRY2"}},{"cell_type":"code","source":"importances = rf_cv.best_estimator_.feature_importances_\nrf_importances = pd.Series(importances, index=X_test.columns)","metadata":{"id":"C10wq1EGv0ta","execution":{"iopub.status.busy":"2024-08-30T11:20:57.691468Z","iopub.execute_input":"2024-08-30T11:20:57.692037Z","iopub.status.idle":"2024-08-30T11:20:57.707757Z","shell.execute_reply.started":"2024-08-30T11:20:57.691996Z","shell.execute_reply":"2024-08-30T11:20:57.706203Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"plt.figure(figsize=(10,10))\nsns.barplot(x=rf_importances, y=rf_importances.index)\nplt.title('Feature importances')\nplt.xlabel('Mean decrease in impurity')\nplt.tight_layout()","metadata":{"id":"C10wq1EGv0ta","execution":{"iopub.status.busy":"2024-08-30T11:20:18.401983Z","iopub.execute_input":"2024-08-30T11:20:18.402334Z","iopub.status.idle":"2024-08-30T11:20:19.057756Z","shell.execute_reply.started":"2024-08-30T11:20:18.402306Z","shell.execute_reply":"2024-08-30T11:20:19.056262Z"},"trusted":true},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x1000 with 1 Axes>","image/png":""},"metadata":{}}]}]}