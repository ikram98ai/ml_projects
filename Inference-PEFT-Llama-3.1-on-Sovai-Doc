{"metadata":{"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":9082365,"sourceType":"datasetVersion","datasetId":5479728}],"dockerImageVersionId":30747,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## Setting up","metadata":{}},{"cell_type":"code","source":"%%capture\n%pip install -U bitsandbytes\n%pip install -U peft\n","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.status.busy":"2024-08-02T17:04:19.290143Z","iopub.execute_input":"2024-08-02T17:04:19.290512Z","iopub.status.idle":"2024-08-02T17:04:54.062774Z","shell.execute_reply.started":"2024-08-02T17:04:19.290480Z","shell.execute_reply":"2024-08-02T17:04:54.061542Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"from huggingface_hub import login\nlogin(\"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\")","metadata":{"execution":{"iopub.status.busy":"2024-08-02T17:04:54.064733Z","iopub.execute_input":"2024-08-02T17:04:54.065056Z","iopub.status.idle":"2024-08-02T17:04:54.606187Z","shell.execute_reply.started":"2024-08-02T17:04:54.065029Z","shell.execute_reply":"2024-08-02T17:04:54.605103Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"The token has not been saved to the git credentials helper. Pass `add_to_git_credential=True` in this function directly or `--add-to-git-credential` if using via `huggingface-cli` if you want to set the git credential as well.\nToken is valid (permission: fineGrained).\nYour token has been saved to /root/.cache/huggingface/token\nLogin successful\n","output_type":"stream"}]},{"cell_type":"code","source":"import warnings \nwarnings.filterwarnings('ignore')","metadata":{"execution":{"iopub.status.busy":"2024-08-02T17:04:54.607784Z","iopub.execute_input":"2024-08-02T17:04:54.608169Z","iopub.status.idle":"2024-08-02T17:04:54.613222Z","shell.execute_reply.started":"2024-08-02T17:04:54.608132Z","shell.execute_reply":"2024-08-02T17:04:54.612131Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport os\nfrom tqdm import tqdm\nimport bitsandbytes as bnb\nimport torch,torch.nn as nn\nimport transformers\nfrom datasets import Dataset\nfrom peft import PeftModel, PeftConfig\nfrom transformers import AutoModelForCausalLM,AutoTokenizer,BitsAndBytesConfig,pipeline","metadata":{"execution":{"iopub.status.busy":"2024-08-02T17:04:54.615220Z","iopub.execute_input":"2024-08-02T17:04:54.615561Z","iopub.status.idle":"2024-08-02T17:05:15.115672Z","shell.execute_reply.started":"2024-08-02T17:04:54.615500Z","shell.execute_reply":"2024-08-02T17:05:15.114860Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stderr","text":"2024-08-02 17:05:04.189522: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n2024-08-02 17:05:04.189633: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n2024-08-02 17:05:04.313181: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}]},{"cell_type":"code","source":"def generate_test_prompt(text):\n     return f\"\"\"Convert the description into functional and efficient code. Return only the code without any additional explanations or comments.\\n\\nDESCRIPTION:{text}\\n\\nCODE:\"\"\".strip()","metadata":{"execution":{"iopub.status.busy":"2024-08-02T17:06:05.782766Z","iopub.execute_input":"2024-08-02T17:06:05.783173Z","iopub.status.idle":"2024-08-02T17:06:05.788669Z","shell.execute_reply.started":"2024-08-02T17:06:05.783141Z","shell.execute_reply":"2024-08-02T17:06:05.787426Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":"### **Loading the model and tokenizer**","metadata":{}},{"cell_type":"code","source":"base_model_name = \"meta-llama/Meta-Llama-3-8B-Instruct\"\npeft_model_name = \"ikram98ai/llama3.1-sovai\"","metadata":{"execution":{"iopub.status.busy":"2024-08-02T17:06:25.491931Z","iopub.execute_input":"2024-08-02T17:06:25.492587Z","iopub.status.idle":"2024-08-02T17:06:25.497283Z","shell.execute_reply.started":"2024-08-02T17:06:25.492553Z","shell.execute_reply":"2024-08-02T17:06:25.496188Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"bnb_config = BitsAndBytesConfig(\n    load_in_4bit=True,\n    bnb_4bit_use_double_quant=False,\n    bnb_4bit_quant_type=\"nf4\",\n    bnb_4bit_compute_dtype=\"float16\",\n)\n\nconfig = PeftConfig.from_pretrained(peft_model_name)\nbase_model = AutoModelForCausalLM.from_pretrained(base_model_name, \n                                                  device_map=\"auto\",\n                                                  torch_dtype=\"float16\",\n                                                  quantization_config=bnb_config )\n\npeft_model = PeftModel.from_pretrained(base_model, peft_model_name, is_trainable=False)\ntokenizer = AutoTokenizer.from_pretrained(base_model_name)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T17:06:25.920231Z","iopub.execute_input":"2024-08-02T17:06:25.920636Z","iopub.status.idle":"2024-08-02T17:09:42.183105Z","shell.execute_reply.started":"2024-08-02T17:06:25.920580Z","shell.execute_reply":"2024-08-02T17:09:42.182038Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"tokenizer.pad_token_id = tokenizer.eos_token_id\n# model.config.use_cache = False\n# model.config.pretraining_tp = 1","metadata":{"execution":{"iopub.status.busy":"2024-08-02T17:14:20.056574Z","iopub.execute_input":"2024-08-02T17:14:20.057469Z","iopub.status.idle":"2024-08-02T17:14:20.062270Z","shell.execute_reply.started":"2024-08-02T17:14:20.057427Z","shell.execute_reply":"2024-08-02T17:14:20.061235Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":"### **Inferencing PEFT Model** ","metadata":{}},{"cell_type":"code","source":"texts= [\"retrieve comprehensive Wikipedia views data\",\n\"Retrieve data on corporate risk events\",\n\"Obtain alternative factor details\",\n\"fetch news data for specified tickers\",\n\"Fetch data on alternative market factors\",\n\"retrieve normal ratios records\",\n\"fetch spending location insights for MSFT and TSLA\",\n\"Download executive compensation data\",\n\"Find relevant news sentiment for specific companies or sectors\",\n\"fetch detailed Wikipedia views records\",\n\"Analyze consumer complaints related to companies\"]","metadata":{"execution":{"iopub.status.busy":"2024-08-02T17:10:22.690562Z","iopub.execute_input":"2024-08-02T17:10:22.690993Z","iopub.status.idle":"2024-08-02T17:10:22.696816Z","shell.execute_reply.started":"2024-08-02T17:10:22.690957Z","shell.execute_reply":"2024-08-02T17:10:22.695596Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"pipe = pipeline(task=\"text-generation\", \n                    model=peft_model,\n                    tokenizer=tokenizer, \n                    max_new_tokens=32, \n                    temperature=0.1)","metadata":{"execution":{"iopub.status.busy":"2024-08-02T17:19:56.130797Z","iopub.execute_input":"2024-08-02T17:19:56.131463Z","iopub.status.idle":"2024-08-02T17:19:56.138624Z","shell.execute_reply.started":"2024-08-02T17:19:56.131428Z","shell.execute_reply":"2024-08-02T17:19:56.137419Z"},"trusted":true},"execution_count":25,"outputs":[{"name":"stderr","text":"The model 'PeftModelForCausalLM' is not supported for text-generation. Supported models are ['BartForCausalLM', 'BertLMHeadModel', 'BertGenerationDecoder', 'BigBirdForCausalLM', 'BigBirdPegasusForCausalLM', 'BioGptForCausalLM', 'BlenderbotForCausalLM', 'BlenderbotSmallForCausalLM', 'BloomForCausalLM', 'CamembertForCausalLM', 'LlamaForCausalLM', 'CodeGenForCausalLM', 'CohereForCausalLM', 'CpmAntForCausalLM', 'CTRLLMHeadModel', 'Data2VecTextForCausalLM', 'DbrxForCausalLM', 'ElectraForCausalLM', 'ErnieForCausalLM', 'FalconForCausalLM', 'FuyuForCausalLM', 'GemmaForCausalLM', 'Gemma2ForCausalLM', 'GitForCausalLM', 'GPT2LMHeadModel', 'GPT2LMHeadModel', 'GPTBigCodeForCausalLM', 'GPTNeoForCausalLM', 'GPTNeoXForCausalLM', 'GPTNeoXJapaneseForCausalLM', 'GPTJForCausalLM', 'JambaForCausalLM', 'JetMoeForCausalLM', 'LlamaForCausalLM', 'MambaForCausalLM', 'MarianForCausalLM', 'MBartForCausalLM', 'MegaForCausalLM', 'MegatronBertForCausalLM', 'MistralForCausalLM', 'MixtralForCausalLM', 'MptForCausalLM', 'MusicgenForCausalLM', 'MusicgenMelodyForCausalLM', 'MvpForCausalLM', 'OlmoForCausalLM', 'OpenLlamaForCausalLM', 'OpenAIGPTLMHeadModel', 'OPTForCausalLM', 'PegasusForCausalLM', 'PersimmonForCausalLM', 'PhiForCausalLM', 'Phi3ForCausalLM', 'PLBartForCausalLM', 'ProphetNetForCausalLM', 'QDQBertLMHeadModel', 'Qwen2ForCausalLM', 'Qwen2MoeForCausalLM', 'RecurrentGemmaForCausalLM', 'ReformerModelWithLMHead', 'RemBertForCausalLM', 'RobertaForCausalLM', 'RobertaPreLayerNormForCausalLM', 'RoCBertForCausalLM', 'RoFormerForCausalLM', 'RwkvForCausalLM', 'Speech2Text2ForCausalLM', 'StableLmForCausalLM', 'Starcoder2ForCausalLM', 'TransfoXLLMHeadModel', 'TrOCRForCausalLM', 'WhisperForCausalLM', 'XGLMForCausalLM', 'XLMWithLMHeadModel', 'XLMProphetNetForCausalLM', 'XLMRobertaForCausalLM', 'XLMRobertaXLForCausalLM', 'XLNetLMHeadModel', 'XmodForCausalLM'].\n","output_type":"stream"}]},{"cell_type":"code","source":"answers = []\nfor text in tqdm(texts):\n    prompt = generate_test_prompt(text)\n    result = pipe(prompt)\n    answer = result[0]['generated_text']\n    answers.append('sov'+answer.split('sov')[1].replace('#',''))","metadata":{"execution":{"iopub.status.busy":"2024-08-02T17:21:02.094047Z","iopub.execute_input":"2024-08-02T17:21:02.094451Z","iopub.status.idle":"2024-08-02T17:21:49.648430Z","shell.execute_reply.started":"2024-08-02T17:21:02.094410Z","shell.execute_reply":"2024-08-02T17:21:49.647455Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stderr","text":"100%|██████████| 11/11 [00:47<00:00,  4.32s/it]\n","output_type":"stream"}]},{"cell_type":"code","source":"list(zip(texts,answers))","metadata":{"execution":{"iopub.status.busy":"2024-08-02T17:21:58.492804Z","iopub.execute_input":"2024-08-02T17:21:58.493985Z","iopub.status.idle":"2024-08-02T17:21:58.502563Z","shell.execute_reply.started":"2024-08-02T17:21:58.493935Z","shell.execute_reply":"2024-08-02T17:21:58.501241Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"[('retrieve comprehensive Wikipedia views data',\n  \"sov.data('wikipedia/views')  \"),\n ('Retrieve data on corporate risk events', \"sov.data('corprisk/events')\"),\n ('Obtain alternative factor details', \"sov.data('factors/alternative')\"),\n ('fetch news data for specified tickers',\n  \"sov.data('news/daily', start_date='2017-03-30', tickers=['MSFT','TSLA'])\"),\n ('Fetch data on alternative market factors',\n  \"sov.data('factors/alternative')\"),\n ('retrieve normal ratios records', \"sov.data('ratios/normal')  \"),\n ('fetch spending location insights for MSFT and TSLA',\n  \"sov.data('spending/location', tickers=['MSFT','TSLA'])\"),\n ('Download executive compensation data',\n  \"sov.data('spending/compensation')  \"),\n ('Find relevant news sentiment for specific companies or sectors',\n  \"sov.data('news/daily', start_date='2017-03-30', tickers=['MSFT','TSLA'])\"),\n ('fetch detailed Wikipedia views records', \"sov.data('wikipedia/views')  \"),\n ('Analyze consumer complaints related to companies',\n  \"sov.data('complaints/consumer')  \")]"},"metadata":{}}]}]}